{"version":3,"sources":["components/GradesUtils.js","components/Title.js","components/Inset.js","components/GradesList.js","components/Header.js","components/Summary.js","components/Export.js","components/Import.js","components/More.js","components/Footer.js","components/DashboardContent.js","App.js","reportWebVitals.js","index.js"],"names":["gradeItems","current_grade_id","addGrade","name","grade","credits","JSON","parse","localStorage","getItem","getCurrentGradeList","gradeItem","GradeItem","push","setCurrentGradeItems","setCurrentGradeId","reloadGradeList","window","location","reload","current_grades_list","setItem","stringify","getMinGrade","length","minGrade","i","toFixed","getMaxGrade","maxGrade","getSumCredits","sumCredits","getAverage","sum","creditCouter","console","table","StatisticsItem","id","average","Object","classCallCheck","this","csvFileToArray","string","csvHeader","slice","indexOf","split","map","values","reduce","object","header","index","Title","props","react","Typography","align","paddingLeft","component","variant","color","gutterBottom","children","Inset","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setGrade","_useState5","_useState6","setCredits","react_default","a","createElement","Fragment","components_Title","Container","Paper","maxWidth","CssBaseline","Box","noValidate","sx","mt","Grid","container","spacing","item","xs","sm","TextField","type","required","fullWidth","label","autoFocus","onChange","e","target","value","defaultValue","Button","startIcon","Add_default","mb","onClick","parseFloat","Clear_default","removeItem","GradeList","TableContainer","Table","minWidth","aria-label","TableHead","TableRow","TableCell","TableBody","key","&:last-child td, &:last-child th","border","splice","deleteGrade","scope","Header","className","Summary","statistics","Export","theme","useTheme","_React$useState","React","_React$useState2","open","setOpen","fullScreen","useMediaQuery","breakpoints","down","handleClose","agree","_step","rows","_iterator","_createForOfIteratorHelper","s","n","done","err","f","csvContent","forEach","rowArray","row","join","encodedUri","encodeURI","saveToCsvFile","FileDownload_default","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Import","file","setFile","_React$useState3","_React$useState4","fileName","setFileName","_React$useState5","_React$useState6","showUpload","setShowUpload","_React$useState7","_React$useState8","showImportBtn","setShowImportBtn","fileReader","FileReader","handleOnSubmit","preventDefault","onload","event","data","array","setGradesFromFile","result","readAsText","htmlFor","style","display","accept","files","Upload_default","ImportExport","Footer","createTheme","palette","primary","main","white","secondary","DashboardContent","ThemeProvider","backgroundColor","mode","grey","flexGrow","height","overflow","p","flexDirection","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"4xCAAA,IAAIA,EAAa,GACbC,EAAmB,EAEhB,SAASC,EAASC,EAAMC,EAAOC,GAwBZ,OADxBJ,EAAmBK,KAAKC,MAAMC,aAAaC,QAAQ,eAEjDR,EAAmB,GAvBrBS,IACA,IAAIC,EAAY,IAAIC,EAAUX,EAAkBE,EAAMC,EAAOC,GAC7DL,EAAWa,KAAKF,GAChBG,IACAC,IACAC,IAGF,SAASA,IACPC,OAAOC,SAASC,QAAO,GAGlB,SAAST,IACd,IAAIU,EAAsBd,KAAKC,MAAMC,aAAaC,QAAQ,eAI1D,OAH2B,MAAvBW,IACFpB,EAAaoB,GAERpB,EAUT,SAASe,IACPP,aAAaa,QAAQ,UAAWf,KAAKgB,UAAUrB,IAGjD,SAASa,IACPb,IACAO,aAAaa,QAAQ,aAAcf,KAAKgB,UAAUtB,IAyB7C,SAASuB,IAEd,GADAb,IAC0B,IAAtBV,EAAWwB,OACb,OAAO,EAGT,IADA,IAAIC,EAAW,IACNC,EAAI,EAAGA,EAAI1B,EAAWwB,OAAQE,IACjC1B,EAAW0B,GAAGtB,MAAQqB,IACxBA,EAAWzB,EAAW0B,GAAGtB,OAG7B,OAAOqB,EAASE,QAAQ,GAGnB,SAASC,IAEd,GADAlB,IAC0B,IAAtBV,EAAWwB,OACb,OAAO,EAGT,IADA,IAAIK,EAAW,EACNH,EAAI,EAAGA,EAAI1B,EAAWwB,OAAQE,IACjC1B,EAAW0B,GAAGtB,MAAQyB,IACxBA,EAAW7B,EAAW0B,GAAGtB,OAG7B,OAAOyB,EAASF,QAAQ,GAGnB,SAASG,IAEd,GADApB,IAC0B,IAAtBV,EAAWwB,OACb,OAAO,EAGT,IADA,IAAIO,EAAa,EACRL,EAAI,EAAGA,EAAI1B,EAAWwB,OAAQE,IACrCK,GAAc/B,EAAW0B,GAAGrB,QAE9B,OAAO0B,EAAWJ,QAAQ,GAGrB,SAASK,IAEd,GADAtB,IAC0B,IAAtBV,EAAWwB,OACb,OAAO,EAET,IAAIS,EAAM,EACNC,EAAe,EACnBC,QAAQC,MAAMpC,GACd,IAAK,IAAI0B,EAAI,EAAGA,EAAI1B,EAAWwB,OAAQE,IACrCO,GAAOjC,EAAW0B,GAAGtB,MAAQJ,EAAW0B,GAAGrB,QAC3C6B,GAAgBlC,EAAW0B,GAAGrB,QAEhC,OAAQ4B,EAAMC,GAAcP,QAAQ,OAchCU,EACJ,SAAAA,EAAYC,EAAIC,EAASR,EAAYF,EAAUJ,GAAWe,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACxDK,KAAKJ,GAAKA,EACVI,KAAKH,QAAUA,EACfG,KAAKX,WAAaA,EAClBW,KAAKb,SAAWA,EAChBa,KAAKjB,SAAWA,GAIdb,EACJ,SAAAA,EAAY0B,EAAInC,EAAMC,EAAOC,GAAUmC,OAAAC,EAAA,EAAAD,CAAAE,KAAA9B,GACrC8B,KAAKJ,GAAKA,EACVI,KAAKvC,KAAOA,EACZuC,KAAKtC,MAAQA,EACbsC,KAAKrC,QAAUA,GA6BnB,IAAMsC,EAAiB,SAACC,GACtB,IAAMC,EAAYD,EAAOE,MAAM,EAAGF,EAAOG,QAAQ,OAAOC,MAAM,KAY9D,OAXgBJ,EAAOE,MAAMF,EAAOG,QAAQ,MAAQ,GAAGC,MAAM,MAEvCC,IAAI,SAACvB,GACzB,IAAMwB,EAASxB,EAAEsB,MAAM,KAKvB,OAJYH,EAAUM,OAAO,SAACC,EAAQC,EAAQC,GAE5C,OADAF,EAAOC,GAAUH,EAAOI,GACjBF,GACN,sDC/JQG,MAnBf,SAAeC,GACb,OACEC,EAAA,cAACC,EAAA,EAAD,CACEC,MAAM,OACNC,YAAY,OACZC,UAAU,KACVC,QAAQ,KACRC,MAAM,UACNC,cAAY,GAEXR,EAAMS,WCAE,SAASC,IAAQ,IAAAC,EACNC,mBAAS,KADHC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA2B,EAAA,GACvBhE,EADuBkE,EAAA,GACjBE,EADiBF,EAAA,GAAAG,EAEJJ,mBAAS,GAFLK,EAAAjC,OAAA8B,EAAA,EAAA9B,CAAAgC,EAAA,GAEvBpE,EAFuBqE,EAAA,GAEhBC,EAFgBD,EAAA,GAAAE,EAGAP,mBAAS,GAHTQ,EAAApC,OAAA8B,EAAA,EAAA9B,CAAAmC,EAAA,GAGvBtE,EAHuBuE,EAAA,GAGdC,EAHcD,EAAA,GAK9B,OACEE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAD,mBACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWtB,UAAWuB,IAAOC,SAAS,MACpCP,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,YAAU,EAACC,GAAI,CAAEC,GAAI,IACxBZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvBf,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,KAAK,SACL/F,KAAK,QACLgG,UAAQ,EACRC,WAAS,EACT9D,GAAG,QACH+D,MAAM,QACNC,WAAS,EACTC,SAAU,SAACC,GAAD,OAAO9B,EAAS8B,EAAEC,OAAOC,WAGvC5B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,KAAK,SACLE,WAAS,EACT9D,GAAG,UACH+D,MAAM,UACNlG,KAAK,UACLwG,aAAa,IACbJ,SAAU,SAACC,GAAD,OAAO3B,EAAW2B,EAAEC,OAAOC,WAGzC5B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACbjB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEM,SAAU,SAACC,GAAD,OAAOjC,EAAQiC,EAAEC,OAAOC,QAClCP,UAAQ,EACRC,WAAS,EACT9D,GAAG,aACH+D,MAAM,cACNlG,KAAK,iBAIX2E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,WAAS,GACbd,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACbjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLE,WAAS,EACTtC,QAAQ,YACR+C,UAAW/B,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,MACXU,GAAI,CAAEC,GAAI,EAAGqB,GAAI,GACjBC,QAAS,WACP9G,EAASC,EAAM8G,WAAW7G,GAAQ6G,WAAW5G,MAPjD,QAaFyE,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACbjB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLE,WAAS,EACTtC,QAAQ,WACR+C,UAAW/B,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,MACXU,GAAI,CAAEC,GAAI,EAAGqB,GAAI,GACjBC,QAAS,WFxCvBhH,EAAa,GACbQ,aAAa2G,WAAW,cACxBlH,EAAmB,EACnBc,IACAC,ME8BY,wEChEC,SAASoG,IACtB,IAAMpH,EAAaU,IAEnB,OACEoE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAD,oBACAJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAgBxD,UAAWuB,KACzBN,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAO7B,GAAI,CAAE8B,SAAU,KAAOC,aAAW,gBACvC1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,MACA7C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,oBACA7C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWhE,MAAM,SAAjB,SACAmB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWhE,MAAM,SAAjB,aAGJmB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACG5H,EAAWiD,IAAI,SAACtC,GAAD,OACdmE,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CACEG,IAAKlH,EAAU2B,GACfmD,GAAI,CAAEqC,mCAAoC,CAAEC,OAAQ,KAEpDjD,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEI,QAAS,YHatB,SAAqB1E,GAC1B5B,IAEA,IADA,IAAI4C,EAAQ,EACH5B,EAAI,EAAGA,EAAI1B,EAAWwB,SAC7B8B,IACItD,EAAW0B,GAAGY,KAAOA,GAFYZ,KAMvC1B,EAAWgI,OAAO1E,EAAQ,EAAG,GAC7BxC,IACAE,IGvBoBiH,CAAYtH,EAAU2B,MAF1B,MAQFwC,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAW9D,UAAU,KAAKqE,MAAM,OAC7BvH,EAAUR,MAEb2E,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWhE,MAAM,SAAShD,EAAUP,OACpC0E,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWhE,MAAM,SAAShD,EAAUN,gBC7CrC,SAAS8H,IACtB,OAAOrD,EAAAC,EAAAC,cAAA,UAAQoD,UAAU,WCQZ,SAASC,IACtB,IAAMC,ELkHC,CAPc,IAAIjG,EACvB,EACAL,IACAF,IACAF,IACAL,MK7GF,OAFAY,QAAQC,MAAMkG,GAGZ7E,EAAA,cAACA,EAAA,SAAD,KACEA,EAAA,cAACyB,EAAD,mBACAzB,EAAA,cAAC4D,EAAA,EAAD,CAAgBxD,UAAWuB,KACzB3B,EAAA,cAAC6D,EAAA,EAAD,CAAO7B,GAAI,CAAEJ,SAAU,KAAOmC,aAAW,gBACvC/D,EAAA,cAACgE,EAAA,EAAD,KACEhE,EAAA,cAACiE,EAAA,EAAD,KACEjE,EAAA,cAACkE,EAAA,EAAD,uBACAlE,EAAA,cAACkE,EAAA,EAAD,4BAGJlE,EAAA,cAACmE,EAAA,EAAD,KACGU,EAAWrF,IAAI,SAACqF,GAAD,OACd7E,EAAA,cAACiE,EAAA,EAAD,CACEG,IAAKS,EAAWhG,GAChBmD,GAAI,CAAEqC,mCAAoC,CAAEC,OAAQ,KAEpDtE,EAAA,cAACkE,EAAA,EAAD,KAAYW,EAAW/F,SACvBkB,EAAA,cAACkE,EAAA,EAAD,KAAYW,EAAWvG,iBAK/B0B,EAAA,cAAC6D,EAAA,EAAD,CAAO7B,GAAI,CAAEJ,SAAU,KAAOmC,aAAW,gBACvC/D,EAAA,cAACgE,EAAA,EAAD,KACEhE,EAAA,cAACiE,EAAA,EAAD,KACEjE,EAAA,cAACkE,EAAA,EAAD,sBACAlE,EAAA,cAACkE,EAAA,EAAD,uBAGJlE,EAAA,cAACmE,EAAA,EAAD,KACGU,EAAWrF,IAAI,SAACqF,GAAD,OACd7E,EAAA,cAACiE,EAAA,EAAD,CACEG,IAAKS,EAAWhG,GAChBmD,GAAI,CAAEqC,mCAAoC,CAAEC,OAAQ,KAEpDtE,EAAA,cAACkE,EAAA,EAAD,KAAYW,EAAWzG,UACvB4B,EAAA,cAACkE,EAAA,EAAD,KAAYW,EAAW7G,yGCvCxB,SAAS8G,KACtB,IAAMC,EAAQC,eADiBC,EAGPC,IAAMvE,UAAS,GAHRwE,EAAApG,OAAA8B,EAAA,EAAA9B,CAAAkG,EAAA,GAGxBG,EAHwBD,EAAA,GAGlBE,EAHkBF,EAAA,GAIzBG,EAAaC,aAAcR,EAAMS,YAAYC,KAAK,OAMlDC,EAAc,SAACC,GACnBN,GAAQ,GACJM,GN2HD,WACL1I,IACA,IAF8B2I,EAE1BC,EAAO,CAAC,CAAC,cAAe,QAAS,YAFPC,EAAAC,EAGNxJ,GAHM,IAG9B,IAAAuJ,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAoC,KAAzBhJ,EAAyB0I,EAAA3C,MAClC4C,EAAKzI,KAAK,CAACF,EAAUR,KAAMQ,EAAUP,MAAOO,EAAUN,WAJ1B,MAAAuJ,GAAAL,EAAA/C,EAAAoD,GAAA,QAAAL,EAAAM,IAM9BP,EAAKzI,KAAK,CACR,iBACA,oBACA,kBACA,iBAEFyI,EAAKzI,KAAK,CAACmB,IAAcF,IAAiBF,IAAeL,MAEzD,IAAIuI,EAAa,+BAEjBR,EAAKS,QAAQ,SAASC,GACpB,IAAIC,EAAMD,EAASE,KAAK,KACxBJ,GAAcG,EAAM,SAGtB,IAAIE,EAAaC,UAAUN,GAC3B7I,OAAO4H,KAAKsB,GMhJRE,IAIJ,OACEvF,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLE,WAAS,EACTtC,QAAQ,WACR+C,UAAW/B,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,MACXU,GAAI,CAAEC,GAAI,EAAGqB,GAAI,GACjBC,QAAS,WAlBb8B,GAAQ,KAYN,UAYAhE,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACExB,WAAYA,EACZF,KAAMA,EACN2B,QAASrB,EACTsB,kBAAgB,2BAEhB3F,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,CAAapI,GAAG,2BACb,yCAEHwC,EAAAC,EAAAC,cAAC2F,GAAA,EAAD,KACE7F,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,4FAKF9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,KACE/F,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEN,WAAS,EACTU,QAAS,WACPmC,GAAY,KAHhB,YAQArE,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEI,QAAS,WACPmC,GAAY,IAEd7C,WAAS,GAJX,oCC7DK,SAASwE,KAAS,IAAApC,EACPC,IAAMvE,WADCwE,EAAApG,OAAA8B,EAAA,EAAA9B,CAAAkG,EAAA,GACxBqC,EADwBnC,EAAA,GAClBoC,EADkBpC,EAAA,GAAAqC,EAECtC,IAAMvE,SAAS,IAFhB8G,EAAA1I,OAAA8B,EAAA,EAAA9B,CAAAyI,EAAA,GAExBE,EAFwBD,EAAA,GAEdE,EAFcF,EAAA,GAAAG,EAGK1C,IAAMvE,UAAS,GAHpBkH,EAAA9I,OAAA8B,EAAA,EAAA9B,CAAA6I,EAAA,GAGxBE,EAHwBD,EAAA,GAGZE,EAHYF,EAAA,GAAAG,EAIW9C,IAAMvE,UAAS,GAJ1BsH,EAAAlJ,OAAA8B,EAAA,EAAA9B,CAAAiJ,EAAA,GAIxBE,EAJwBD,EAAA,GAITE,EAJSF,EAAA,GAMzBG,EAAa,IAAIC,WAkBjBC,EAAiB,SAACvF,GACtBA,EAAEwF,iBACEjB,IACFc,EAAWI,OAAS,SAASC,IP2J5B,SAA2BC,GAChC,IAAMC,EAAQzJ,EAAewJ,GAC7BhK,QAAQC,MAAMgK,GO3JRC,CADkBH,EAAMzF,OAAO6F,SAGjCT,EAAWU,WAAWxB,KAI1B,OACEjG,EAAAC,EAAAC,cAAA,YACGuG,GACCzG,EAAAC,EAAAC,cAAA,SAAO1C,GAAG,aAAakK,QAAQ,cAC7B1H,EAAAC,EAAAC,cAAA,SACEyH,MAAO,CAAEC,QAAS,QAClBpK,GAAG,aACHnC,KAAK,aACL+F,KAAK,OACLyG,OAAQ,OACRpG,SA9Ba,SAACC,GACtBwE,EAAQxE,EAAEC,OAAOmG,MAAM,IACnBpG,EAAEC,OAAOmG,MAAM,KACjBxB,EAAY5E,EAAEC,OAAOmG,MAAM,GAAGzM,MAC9BqL,GAAc,GACdI,GAAiB,OA4Bb9G,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLE,WAAS,EACTS,UAAW/B,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,MACXlB,UAAU,OACV2D,aAAW,MACX1D,QAAQ,YANV,WAYH6H,GACC7G,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACtB,EAAA,EAAD,CACEC,MAAM,OACNE,UAAU,QACVC,QAAQ,QACRE,cAAY,GAEZc,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLc,QAAS,SAACR,GA7DpB4E,EAAY,IACZJ,EAAQ,MACRQ,GAAc,GACdI,GAAiB,KAwDT,KAQCT,GAEHrG,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEV,KAAK,SACLE,WAAS,EACTrC,MAAM,YACND,QAAQ,WACR+C,UAAW/B,EAAAC,EAAAC,cAAC6H,GAAA9H,EAAD,MACXlB,UAAU,QACV4B,GAAI,CAAEC,GAAI,EAAGqB,GAAI,GACjBC,QAAS,SAACR,GACRuF,EAAevF,KATnB,iBC7EK,SAASsG,KACtB,OACEhI,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACE,EAAD,aACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWtB,UAAWuB,IAAOC,SAAS,MACpCP,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAAC8F,GAAD,MACAhG,EAAAC,EAAAC,cAACuD,GAAD,QCbO,SAASwE,KACtB,OAAOtJ,EAAA,wBAAQ2E,UAAU,WCW3B,IAAMI,GAAQwE,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,MAAO,WAETC,UAAW,CACTF,KAAM,cAKG,SAASG,KACtB,OACE7J,EAAA,cAAC8J,EAAA,EAAD,CAAe/E,MAAOA,IACpB/E,EAAA,cAAC8B,EAAA,EAAD,CAAKE,GAAI,CAAEiH,QAAS,SAClBjJ,EAAA,cAAC6B,EAAA,EAAD,MACA7B,EAAA,cAAC0E,EAAD,MACA1E,EAAA,cAAC8B,EAAA,EAAD,CACE1B,UAAU,OACV4B,GAAI,CACF+H,gBAAiB,SAAChF,GAAD,MACQ,UAAvBA,EAAMyE,QAAQQ,KACVjF,EAAMyE,QAAQS,KAAK,KACnBlF,EAAMyE,QAAQS,KAAK,MACzBC,SAAU,EACVC,OAAQ,QACRC,SAAU,SAGZpK,EAAA,cAAC0B,EAAA,EAAD,CAAWE,SAAS,KAAKI,GAAI,CAAEC,GAAI,EAAGqB,GAAI,IACxCtD,EAAA,cAACkC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvBpC,EAAA,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACbtC,EAAA,cAAC2B,EAAA,EAAD,CACEK,GAAI,CACFqI,EAAG,EACHpB,QAAS,OACTqB,cAAe,SACfH,OAAQ,IACRI,QAAS,SAGXvK,EAAA,cAACS,EAAD,QAGJT,EAAA,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACbtC,EAAA,cAAC2B,EAAA,EAAD,CACEK,GAAI,CACFqI,EAAG,EACHpB,QAAS,OACTqB,cAAe,SACfH,OAAQ,IACRK,UAAW,OACXD,QAAS,SAGXvK,EAAA,cAAC4E,EAAD,QAGJ5E,EAAA,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACbtC,EAAA,cAAC2B,EAAA,EAAD,CACEK,GAAI,CACFqI,EAAG,EACHpB,QAAS,OACTqB,cAAe,SACfH,OAAQ,IACRK,UAAW,OACXD,QAAS,SAGXvK,EAAA,cAACqJ,GAAD,QAGJrJ,EAAA,cAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACbtC,EAAA,cAAC2B,EAAA,EAAD,CACEK,GAAI,CACFqI,EAAG,EACHpB,QAAS,OACTqB,cAAe,SACfC,QAAS,SAGXvK,EAAA,cAAC2D,EAAD,WAMV3D,EAAA,cAACsJ,GAAD,eC1FOmB,OARf,WACE,OACEpJ,EAAAC,EAAAC,cAAA,OAAKoD,UAAU,OACbtD,EAAAC,EAAAC,cAACsI,GAAD,QCKSa,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA9H,EAAA,GAAA+H,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrK,EAAAC,EAAAC,cAACF,EAAAC,EAAMqK,WAAP,KACEtK,EAAAC,EAAAC,cAACqK,GAAD,QAOJlB","file":"static/js/main.e2ad87c1.chunk.js","sourcesContent":["let gradeItems = [];\r\nlet current_grade_id = 0;\r\n\r\nexport function addGrade(name, grade, credits) {\r\n  getCurrentGradeId();\r\n  getCurrentGradeList();\r\n  let gradeItem = new GradeItem(current_grade_id, name, grade, credits);\r\n  gradeItems.push(gradeItem);\r\n  setCurrentGradeItems();\r\n  setCurrentGradeId();\r\n  reloadGradeList();\r\n}\r\n\r\nfunction reloadGradeList() {\r\n  window.location.reload(false);\r\n}\r\n\r\nexport function getCurrentGradeList() {\r\n  let current_grades_list = JSON.parse(localStorage.getItem(\"gradeItems\"));\r\n  if (current_grades_list != null) {\r\n    gradeItems = current_grades_list;\r\n  }\r\n  return gradeItems;\r\n}\r\n\r\nfunction getCurrentGradeId() {\r\n  current_grade_id = JSON.parse(localStorage.getItem(\"gradeID\"));\r\n  if (current_grade_id == null) {\r\n    current_grade_id = 0;\r\n  }\r\n}\r\n\r\nfunction setCurrentGradeId() {\r\n  localStorage.setItem(\"gradeID\", JSON.stringify(current_grade_id));\r\n}\r\n\r\nfunction setCurrentGradeItems() {\r\n  current_grade_id++;\r\n  localStorage.setItem(\"gradeItems\", JSON.stringify(gradeItems));\r\n}\r\n\r\nexport function clearGradesItems() {\r\n  gradeItems = [];\r\n  localStorage.removeItem(\"gradeItems\");\r\n  current_grade_id = 0;\r\n  setCurrentGradeId();\r\n  reloadGradeList();\r\n}\r\n\r\nexport function deleteGrade(id) {\r\n  getCurrentGradeList();\r\n  let index = 0;\r\n  for (var i = 0; i < gradeItems.length; i++) {\r\n    index++;\r\n    if (gradeItems[i].id === id) {\r\n      break;\r\n    }\r\n  }\r\n  gradeItems.splice(index - 1, 1);\r\n  setCurrentGradeItems();\r\n  reloadGradeList();\r\n}\r\n\r\nexport function getMinGrade() {\r\n  getCurrentGradeList();\r\n  if (gradeItems.length === 0) {\r\n    return 0;\r\n  }\r\n  let minGrade = 100;\r\n  for (var i = 0; i < gradeItems.length; i++) {\r\n    if (gradeItems[i].grade < minGrade) {\r\n      minGrade = gradeItems[i].grade;\r\n    }\r\n  }\r\n  return minGrade.toFixed(2);\r\n}\r\n\r\nexport function getMaxGrade() {\r\n  getCurrentGradeList();\r\n  if (gradeItems.length === 0) {\r\n    return 0;\r\n  }\r\n  let maxGrade = 0;\r\n  for (var i = 0; i < gradeItems.length; i++) {\r\n    if (gradeItems[i].grade > maxGrade) {\r\n      maxGrade = gradeItems[i].grade;\r\n    }\r\n  }\r\n  return maxGrade.toFixed(2);\r\n}\r\n\r\nexport function getSumCredits() {\r\n  getCurrentGradeList();\r\n  if (gradeItems.length === 0) {\r\n    return 0;\r\n  }\r\n  let sumCredits = 0;\r\n  for (var i = 0; i < gradeItems.length; i++) {\r\n    sumCredits += gradeItems[i].credits;\r\n  }\r\n  return sumCredits.toFixed(2);\r\n}\r\n\r\nexport function getAverage() {\r\n  getCurrentGradeList();\r\n  if (gradeItems.length === 0) {\r\n    return 0;\r\n  }\r\n  let sum = 0;\r\n  let creditCouter = 0;\r\n  console.table(gradeItems);\r\n  for (var i = 0; i < gradeItems.length; i++) {\r\n    sum += gradeItems[i].grade * gradeItems[i].credits;\r\n    creditCouter += gradeItems[i].credits;\r\n  }\r\n  return (sum / creditCouter).toFixed(2);\r\n}\r\n\r\nexport function getStatistics() {\r\n  let statisticsItem = new StatisticsItem(\r\n    0,\r\n    getAverage(),\r\n    getSumCredits(),\r\n    getMaxGrade(),\r\n    getMinGrade()\r\n  );\r\n  return [statisticsItem];\r\n}\r\n\r\nclass StatisticsItem {\r\n  constructor(id, average, sumCredits, maxGrade, minGrade) {\r\n    this.id = id;\r\n    this.average = average;\r\n    this.sumCredits = sumCredits;\r\n    this.maxGrade = maxGrade;\r\n    this.minGrade = minGrade;\r\n  }\r\n}\r\n\r\nclass GradeItem {\r\n  constructor(id, name, grade, credits) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.grade = grade;\r\n    this.credits = credits;\r\n  }\r\n}\r\n\r\nexport function saveToCsvFile() {\r\n  getCurrentGradeList();\r\n  let rows = [[\"Course Name\", \"Grade\", \"Credits\"]];\r\n  for (const gradeItem of gradeItems) {\r\n    rows.push([gradeItem.name, gradeItem.grade, gradeItem.credits]);\r\n  }\r\n  rows.push([\r\n    \"Grades Average\",\r\n    \"Number of Credits\",\r\n    \"Highest Grade\t\",\r\n    \"Lowest Grade\",\r\n  ]);\r\n  rows.push([getAverage(), getSumCredits(), getMaxGrade(), getMinGrade()]);\r\n\r\n  let csvContent = \"data:text/csv;charset=utf-8,\";\r\n\r\n  rows.forEach(function(rowArray) {\r\n    let row = rowArray.join(\",\");\r\n    csvContent += row + \"\\r\\n\";\r\n  });\r\n\r\n  var encodedUri = encodeURI(csvContent);\r\n  window.open(encodedUri);\r\n}\r\n\r\nconst csvFileToArray = (string) => {\r\n  const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\r\n  const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\r\n\r\n  const array = csvRows.map((i) => {\r\n    const values = i.split(\",\");\r\n    const obj = csvHeader.reduce((object, header, index) => {\r\n      object[header] = values[index];\r\n      return object;\r\n    }, {});\r\n    return obj;\r\n  });\r\n\r\n  return array;\r\n};\r\n\r\nexport function setGradesFromFile(data) {\r\n  const array = csvFileToArray(data);\r\n  console.table(array);\r\n}\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <Typography\r\n      align=\"left\"\r\n      paddingLeft=\"20px\"\r\n      component=\"h2\"\r\n      variant=\"h6\"\r\n      color=\"primary\"\r\n      gutterBottom\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { addGrade, clearGradesItems } from \"./GradesUtils\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Title from \"./Title\";\r\n\r\nexport default function Inset() {\r\n  const [name, setName] = useState(\" \");\r\n  const [grade, setGrade] = useState(0);\r\n  const [credits, setCredits] = useState(1);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Add Grades</Title>\r\n      <Container component={Paper} maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box noValidate sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                name=\"grade\"\r\n                required\r\n                fullWidth\r\n                id=\"grade\"\r\n                label=\"Grade\"\r\n                autoFocus\r\n                onChange={(e) => setGrade(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                id=\"credits\"\r\n                label=\"Credits\"\r\n                name=\"credits\"\r\n                defaultValue=\"1\"\r\n                onChange={(e) => setCredits(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                onChange={(e) => setName(e.target.value)}\r\n                required\r\n                fullWidth\r\n                id=\"courseName\"\r\n                label=\"course Name\"\r\n                name=\"courseName\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                sx={{ mt: 3, mb: 2 }}\r\n                onClick={() => {\r\n                  addGrade(name, parseFloat(grade), parseFloat(credits));\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                startIcon={<ClearIcon />}\r\n                sx={{ mt: 3, mb: 2 }}\r\n                onClick={() => {\r\n                  clearGradesItems();\r\n                }}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { deleteGrade, getCurrentGradeList } from \"./GradesUtils\";\r\nimport Title from \"./Title\";\r\n\r\nexport default function GradeList() {\r\n  const gradeItems = getCurrentGradeList();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Grades List</Title>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              <TableCell>Course Name</TableCell>\r\n              <TableCell align=\"right\">Grade</TableCell>\r\n              <TableCell align=\"right\">Credits</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {gradeItems.map((gradeItem) => (\r\n              <TableRow\r\n                key={gradeItem.id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell>\r\n                  <Button\r\n                    onClick={() => {\r\n                      deleteGrade(gradeItem.id);\r\n                    }}\r\n                  >\r\n                    X\r\n                  </Button>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {gradeItem.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{gradeItem.grade}</TableCell>\r\n                <TableCell align=\"right\">{gradeItem.credits}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return <header className=\"Header\"></header>;\r\n}\r\n","import * as React from \"react\";\r\nimport Title from \"./Title\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { getStatistics } from \"./GradesUtils\";\r\n\r\nexport default function Summary() {\r\n  const statistics = getStatistics();\r\n  console.table(statistics);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Statistics</Title>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ maxWidth: 275 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Grades Average</TableCell>\r\n              <TableCell>Number of Credits</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {statistics.map((statistics) => (\r\n              <TableRow\r\n                key={statistics.id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell>{statistics.average}</TableCell>\r\n                <TableCell>{statistics.sumCredits}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Table sx={{ maxWidth: 275 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Highest Grade</TableCell>\r\n              <TableCell>Lowest Grade</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {statistics.map((statistics) => (\r\n              <TableRow\r\n                key={statistics.id}\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell>{statistics.maxGrade}</TableCell>\r\n                <TableCell>{statistics.minGrade}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { saveToCsvFile } from \"./GradesUtils\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nexport default function Export() {\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (agree) => {\r\n    setOpen(false);\r\n    if (agree) {\r\n      saveToCsvFile();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button\r\n        type=\"button\"\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        startIcon={<FileDownloadIcon />}\r\n        sx={{ mt: 3, mb: 2 }}\r\n        onClick={() => {\r\n          handleClickOpen();\r\n        }}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Export the grades list to a csv file?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            By agreeing this dialog the app will download a csv file with your\r\n            list of grades.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            onClick={() => {\r\n              handleClose(false);\r\n            }}\r\n          >\r\n            Disagree\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              handleClose(true);\r\n            }}\r\n            autoFocus\r\n          >\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { setGradesFromFile } from \"./GradesUtils\";\r\n\r\nexport default function Import() {\r\n  const [file, setFile] = React.useState();\r\n  const [fileName, setFileName] = React.useState(\"\");\r\n  const [showUpload, setShowUpload] = React.useState(true);\r\n  const [showImportBtn, setShowImportBtn] = React.useState(false);\r\n\r\n  const fileReader = new FileReader();\r\n\r\n  const handleOnDeleteUploadedFile = (e) => {\r\n    setFileName(\"\");\r\n    setFile(null);\r\n    setShowUpload(true);\r\n    setShowImportBtn(false);\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    if (e.target.files[0]) {\r\n      setFileName(e.target.files[0].name);\r\n      setShowUpload(false);\r\n      setShowImportBtn(true);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      fileReader.onload = function(event) {\r\n        const csvOutput = event.target.result;\r\n        setGradesFromFile(csvOutput);\r\n      };\r\n      fileReader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      {showUpload && (\r\n        <label id=\"insert-csv\" htmlFor=\"upload-csv\">\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            id=\"upload-csv\"\r\n            name=\"upload-csv\"\r\n            type=\"file\"\r\n            accept={\".csv\"}\r\n            onChange={handleOnChange}\r\n          />\r\n\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            startIcon={<UploadIcon />}\r\n            component=\"span\"\r\n            aria-label=\"add\"\r\n            variant=\"outlined\"\r\n          >\r\n            Import\r\n          </Button>\r\n        </label>\r\n      )}\r\n      {showImportBtn && (\r\n        <Box>\r\n          <Typography\r\n            align=\"left\"\r\n            component=\"small\"\r\n            variant=\"small\"\r\n            gutterBottom\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                handleOnDeleteUploadedFile(e);\r\n              }}\r\n            >\r\n              X\r\n            </Button>\r\n            {fileName}\r\n          </Typography>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            startIcon={<UploadIcon />}\r\n            component=\"label\"\r\n            sx={{ mt: 3, mb: 2 }}\r\n            onClick={(e) => {\r\n              handleOnSubmit(e);\r\n            }}\r\n          >\r\n            Import File\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Export from \"./Export.js\";\r\nimport Import from \"./Import.js\";\r\nimport Title from \"./Title\";\r\n\r\nexport default function ImportExport() {\r\n  return (\r\n    <React.Fragment>\r\n      <Title>More</Title>\r\n      <Container component={Paper} maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Import />\r\n        <Export />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return <footer className=\"Footer\"></footer>;\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Inset from \"./Inset\";\r\nimport GradeList from \"./GradesList\";\r\nimport Header from \"./Header\";\r\nimport Summary from \"./Summary\";\r\nimport More from \"./More\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1976d2\",\r\n      white: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#f44336\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function DashboardContent() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === \"light\"\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: \"100vh\",\r\n            overflow: \"auto\",\r\n          }}\r\n        >\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={5}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: 350,\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  <Inset />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: 350,\r\n                    textAlign: \"left\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  <Summary />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: 350,\r\n                    textAlign: \"left\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  <More />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    padding: \"20px\",\r\n                  }}\r\n                >\r\n                  <GradeList />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n        <Footer />\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DashboardContent from \"./components/DashboardContent\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DashboardContent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}